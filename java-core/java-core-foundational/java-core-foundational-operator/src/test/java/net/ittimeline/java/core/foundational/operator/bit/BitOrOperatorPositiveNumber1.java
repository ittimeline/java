package net.ittimeline.java.core.foundational.operator.bit;

/**
 * 按位或运算符操作正整数之 5 | 2
 *
 * @author tony 18601767221@163.com
 * @version 2024/10/16 20:04
 * @since Java21
 */
public class BitOrOperatorPositiveNumber1 {
    public static void main(String[] args) {
        /*
            1.先计算5和2的补码（计算机中的数据是使用补码进行运算的，正数的原码、反码、补码都一样）
                5的补码：0000 0000 0000 0000 0000 0000 0000 0101
                2的补码：0000 0000 0000 0000 0000 0000 0000 0010

            2.计算5 | 2（按位或计算规则是按照二进制位进行或运算：有1为1，同0为0）
                0000 0000 0000 0000 0000 0000 0000 0101
                |
                0000 0000 0000 0000 0000 0000 0000 0010
                =
                0000 0000 0000 0000 0000 0000 0000 0111

            3.将补码换算成原码（查看运算结果看原码）
                正数的原码、反码、补码都一样
                补码：0000 0000 0000 0000 0000 0000 0000 0111
                原码：0000 0000 0000 0000 0000 0000 0000 0111

            4.将原码转换为十进制（打印输出结果是十进制）
                0000 0000 0000 0000 0000 0000 0000 0111转换为十进制结果是7

            5. 程序运行结果
                5 | 2 结果就是7
         */
        System.out.println("5 | 2 = " + (5 | 2));
    }
}
